/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTrx implements Serializable {

    private static final long serialVersionUID = -152043344;

    private String    trxId;
    private String    trxState;
    private Timestamp trxStarted;
    private String    trxRequestedLockId;
    private Timestamp trxWaitStarted;
    private ULong     trxWeight;
    private ULong     trxMysqlThreadId;
    private String    trxQuery;
    private String    trxOperationState;
    private ULong     trxTablesInUse;
    private ULong     trxTablesLocked;
    private ULong     trxLockStructs;
    private ULong     trxLockMemoryBytes;
    private ULong     trxRowsLocked;
    private ULong     trxRowsModified;
    private ULong     trxConcurrencyTickets;
    private String    trxIsolationLevel;
    private Integer   trxUniqueChecks;
    private Integer   trxForeignKeyChecks;
    private String    trxLastForeignKeyError;
    private Integer   trxAdaptiveHashLatched;
    private ULong     trxAdaptiveHashTimeout;
    private Integer   trxIsReadOnly;
    private Integer   trxAutocommitNonLocking;

    public InnodbTrx() {}

    public InnodbTrx(InnodbTrx value) {
        this.trxId = value.trxId;
        this.trxState = value.trxState;
        this.trxStarted = value.trxStarted;
        this.trxRequestedLockId = value.trxRequestedLockId;
        this.trxWaitStarted = value.trxWaitStarted;
        this.trxWeight = value.trxWeight;
        this.trxMysqlThreadId = value.trxMysqlThreadId;
        this.trxQuery = value.trxQuery;
        this.trxOperationState = value.trxOperationState;
        this.trxTablesInUse = value.trxTablesInUse;
        this.trxTablesLocked = value.trxTablesLocked;
        this.trxLockStructs = value.trxLockStructs;
        this.trxLockMemoryBytes = value.trxLockMemoryBytes;
        this.trxRowsLocked = value.trxRowsLocked;
        this.trxRowsModified = value.trxRowsModified;
        this.trxConcurrencyTickets = value.trxConcurrencyTickets;
        this.trxIsolationLevel = value.trxIsolationLevel;
        this.trxUniqueChecks = value.trxUniqueChecks;
        this.trxForeignKeyChecks = value.trxForeignKeyChecks;
        this.trxLastForeignKeyError = value.trxLastForeignKeyError;
        this.trxAdaptiveHashLatched = value.trxAdaptiveHashLatched;
        this.trxAdaptiveHashTimeout = value.trxAdaptiveHashTimeout;
        this.trxIsReadOnly = value.trxIsReadOnly;
        this.trxAutocommitNonLocking = value.trxAutocommitNonLocking;
    }

    public InnodbTrx(
        String    trxId,
        String    trxState,
        Timestamp trxStarted,
        String    trxRequestedLockId,
        Timestamp trxWaitStarted,
        ULong     trxWeight,
        ULong     trxMysqlThreadId,
        String    trxQuery,
        String    trxOperationState,
        ULong     trxTablesInUse,
        ULong     trxTablesLocked,
        ULong     trxLockStructs,
        ULong     trxLockMemoryBytes,
        ULong     trxRowsLocked,
        ULong     trxRowsModified,
        ULong     trxConcurrencyTickets,
        String    trxIsolationLevel,
        Integer   trxUniqueChecks,
        Integer   trxForeignKeyChecks,
        String    trxLastForeignKeyError,
        Integer   trxAdaptiveHashLatched,
        ULong     trxAdaptiveHashTimeout,
        Integer   trxIsReadOnly,
        Integer   trxAutocommitNonLocking
    ) {
        this.trxId = trxId;
        this.trxState = trxState;
        this.trxStarted = trxStarted;
        this.trxRequestedLockId = trxRequestedLockId;
        this.trxWaitStarted = trxWaitStarted;
        this.trxWeight = trxWeight;
        this.trxMysqlThreadId = trxMysqlThreadId;
        this.trxQuery = trxQuery;
        this.trxOperationState = trxOperationState;
        this.trxTablesInUse = trxTablesInUse;
        this.trxTablesLocked = trxTablesLocked;
        this.trxLockStructs = trxLockStructs;
        this.trxLockMemoryBytes = trxLockMemoryBytes;
        this.trxRowsLocked = trxRowsLocked;
        this.trxRowsModified = trxRowsModified;
        this.trxConcurrencyTickets = trxConcurrencyTickets;
        this.trxIsolationLevel = trxIsolationLevel;
        this.trxUniqueChecks = trxUniqueChecks;
        this.trxForeignKeyChecks = trxForeignKeyChecks;
        this.trxLastForeignKeyError = trxLastForeignKeyError;
        this.trxAdaptiveHashLatched = trxAdaptiveHashLatched;
        this.trxAdaptiveHashTimeout = trxAdaptiveHashTimeout;
        this.trxIsReadOnly = trxIsReadOnly;
        this.trxAutocommitNonLocking = trxAutocommitNonLocking;
    }

    public String getTrxId() {
        return this.trxId;
    }

    public void setTrxId(String trxId) {
        this.trxId = trxId;
    }

    public String getTrxState() {
        return this.trxState;
    }

    public void setTrxState(String trxState) {
        this.trxState = trxState;
    }

    public Timestamp getTrxStarted() {
        return this.trxStarted;
    }

    public void setTrxStarted(Timestamp trxStarted) {
        this.trxStarted = trxStarted;
    }

    public String getTrxRequestedLockId() {
        return this.trxRequestedLockId;
    }

    public void setTrxRequestedLockId(String trxRequestedLockId) {
        this.trxRequestedLockId = trxRequestedLockId;
    }

    public Timestamp getTrxWaitStarted() {
        return this.trxWaitStarted;
    }

    public void setTrxWaitStarted(Timestamp trxWaitStarted) {
        this.trxWaitStarted = trxWaitStarted;
    }

    public ULong getTrxWeight() {
        return this.trxWeight;
    }

    public void setTrxWeight(ULong trxWeight) {
        this.trxWeight = trxWeight;
    }

    public ULong getTrxMysqlThreadId() {
        return this.trxMysqlThreadId;
    }

    public void setTrxMysqlThreadId(ULong trxMysqlThreadId) {
        this.trxMysqlThreadId = trxMysqlThreadId;
    }

    public String getTrxQuery() {
        return this.trxQuery;
    }

    public void setTrxQuery(String trxQuery) {
        this.trxQuery = trxQuery;
    }

    public String getTrxOperationState() {
        return this.trxOperationState;
    }

    public void setTrxOperationState(String trxOperationState) {
        this.trxOperationState = trxOperationState;
    }

    public ULong getTrxTablesInUse() {
        return this.trxTablesInUse;
    }

    public void setTrxTablesInUse(ULong trxTablesInUse) {
        this.trxTablesInUse = trxTablesInUse;
    }

    public ULong getTrxTablesLocked() {
        return this.trxTablesLocked;
    }

    public void setTrxTablesLocked(ULong trxTablesLocked) {
        this.trxTablesLocked = trxTablesLocked;
    }

    public ULong getTrxLockStructs() {
        return this.trxLockStructs;
    }

    public void setTrxLockStructs(ULong trxLockStructs) {
        this.trxLockStructs = trxLockStructs;
    }

    public ULong getTrxLockMemoryBytes() {
        return this.trxLockMemoryBytes;
    }

    public void setTrxLockMemoryBytes(ULong trxLockMemoryBytes) {
        this.trxLockMemoryBytes = trxLockMemoryBytes;
    }

    public ULong getTrxRowsLocked() {
        return this.trxRowsLocked;
    }

    public void setTrxRowsLocked(ULong trxRowsLocked) {
        this.trxRowsLocked = trxRowsLocked;
    }

    public ULong getTrxRowsModified() {
        return this.trxRowsModified;
    }

    public void setTrxRowsModified(ULong trxRowsModified) {
        this.trxRowsModified = trxRowsModified;
    }

    public ULong getTrxConcurrencyTickets() {
        return this.trxConcurrencyTickets;
    }

    public void setTrxConcurrencyTickets(ULong trxConcurrencyTickets) {
        this.trxConcurrencyTickets = trxConcurrencyTickets;
    }

    public String getTrxIsolationLevel() {
        return this.trxIsolationLevel;
    }

    public void setTrxIsolationLevel(String trxIsolationLevel) {
        this.trxIsolationLevel = trxIsolationLevel;
    }

    public Integer getTrxUniqueChecks() {
        return this.trxUniqueChecks;
    }

    public void setTrxUniqueChecks(Integer trxUniqueChecks) {
        this.trxUniqueChecks = trxUniqueChecks;
    }

    public Integer getTrxForeignKeyChecks() {
        return this.trxForeignKeyChecks;
    }

    public void setTrxForeignKeyChecks(Integer trxForeignKeyChecks) {
        this.trxForeignKeyChecks = trxForeignKeyChecks;
    }

    public String getTrxLastForeignKeyError() {
        return this.trxLastForeignKeyError;
    }

    public void setTrxLastForeignKeyError(String trxLastForeignKeyError) {
        this.trxLastForeignKeyError = trxLastForeignKeyError;
    }

    public Integer getTrxAdaptiveHashLatched() {
        return this.trxAdaptiveHashLatched;
    }

    public void setTrxAdaptiveHashLatched(Integer trxAdaptiveHashLatched) {
        this.trxAdaptiveHashLatched = trxAdaptiveHashLatched;
    }

    public ULong getTrxAdaptiveHashTimeout() {
        return this.trxAdaptiveHashTimeout;
    }

    public void setTrxAdaptiveHashTimeout(ULong trxAdaptiveHashTimeout) {
        this.trxAdaptiveHashTimeout = trxAdaptiveHashTimeout;
    }

    public Integer getTrxIsReadOnly() {
        return this.trxIsReadOnly;
    }

    public void setTrxIsReadOnly(Integer trxIsReadOnly) {
        this.trxIsReadOnly = trxIsReadOnly;
    }

    public Integer getTrxAutocommitNonLocking() {
        return this.trxAutocommitNonLocking;
    }

    public void setTrxAutocommitNonLocking(Integer trxAutocommitNonLocking) {
        this.trxAutocommitNonLocking = trxAutocommitNonLocking;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbTrx (");

        sb.append(trxId);
        sb.append(", ").append(trxState);
        sb.append(", ").append(trxStarted);
        sb.append(", ").append(trxRequestedLockId);
        sb.append(", ").append(trxWaitStarted);
        sb.append(", ").append(trxWeight);
        sb.append(", ").append(trxMysqlThreadId);
        sb.append(", ").append(trxQuery);
        sb.append(", ").append(trxOperationState);
        sb.append(", ").append(trxTablesInUse);
        sb.append(", ").append(trxTablesLocked);
        sb.append(", ").append(trxLockStructs);
        sb.append(", ").append(trxLockMemoryBytes);
        sb.append(", ").append(trxRowsLocked);
        sb.append(", ").append(trxRowsModified);
        sb.append(", ").append(trxConcurrencyTickets);
        sb.append(", ").append(trxIsolationLevel);
        sb.append(", ").append(trxUniqueChecks);
        sb.append(", ").append(trxForeignKeyChecks);
        sb.append(", ").append(trxLastForeignKeyError);
        sb.append(", ").append(trxAdaptiveHashLatched);
        sb.append(", ").append(trxAdaptiveHashTimeout);
        sb.append(", ").append(trxIsReadOnly);
        sb.append(", ").append(trxAutocommitNonLocking);

        sb.append(")");
        return sb.toString();
    }
}
