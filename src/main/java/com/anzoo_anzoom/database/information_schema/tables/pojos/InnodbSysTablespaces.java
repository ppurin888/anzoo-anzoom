/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;

import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysTablespaces implements Serializable {

    private static final long serialVersionUID = 1126051895;

    private UInteger space;
    private String   name;
    private UInteger flag;
    private String   fileFormat;
    private String   rowFormat;
    private UInteger pageSize;
    private UInteger zipPageSize;
    private String   spaceType;
    private UInteger fsBlockSize;
    private ULong    fileSize;
    private ULong    allocatedSize;

    public InnodbSysTablespaces() {}

    public InnodbSysTablespaces(InnodbSysTablespaces value) {
        this.space = value.space;
        this.name = value.name;
        this.flag = value.flag;
        this.fileFormat = value.fileFormat;
        this.rowFormat = value.rowFormat;
        this.pageSize = value.pageSize;
        this.zipPageSize = value.zipPageSize;
        this.spaceType = value.spaceType;
        this.fsBlockSize = value.fsBlockSize;
        this.fileSize = value.fileSize;
        this.allocatedSize = value.allocatedSize;
    }

    public InnodbSysTablespaces(
        UInteger space,
        String   name,
        UInteger flag,
        String   fileFormat,
        String   rowFormat,
        UInteger pageSize,
        UInteger zipPageSize,
        String   spaceType,
        UInteger fsBlockSize,
        ULong    fileSize,
        ULong    allocatedSize
    ) {
        this.space = space;
        this.name = name;
        this.flag = flag;
        this.fileFormat = fileFormat;
        this.rowFormat = rowFormat;
        this.pageSize = pageSize;
        this.zipPageSize = zipPageSize;
        this.spaceType = spaceType;
        this.fsBlockSize = fsBlockSize;
        this.fileSize = fileSize;
        this.allocatedSize = allocatedSize;
    }

    public UInteger getSpace() {
        return this.space;
    }

    public void setSpace(UInteger space) {
        this.space = space;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public UInteger getFlag() {
        return this.flag;
    }

    public void setFlag(UInteger flag) {
        this.flag = flag;
    }

    public String getFileFormat() {
        return this.fileFormat;
    }

    public void setFileFormat(String fileFormat) {
        this.fileFormat = fileFormat;
    }

    public String getRowFormat() {
        return this.rowFormat;
    }

    public void setRowFormat(String rowFormat) {
        this.rowFormat = rowFormat;
    }

    public UInteger getPageSize() {
        return this.pageSize;
    }

    public void setPageSize(UInteger pageSize) {
        this.pageSize = pageSize;
    }

    public UInteger getZipPageSize() {
        return this.zipPageSize;
    }

    public void setZipPageSize(UInteger zipPageSize) {
        this.zipPageSize = zipPageSize;
    }

    public String getSpaceType() {
        return this.spaceType;
    }

    public void setSpaceType(String spaceType) {
        this.spaceType = spaceType;
    }

    public UInteger getFsBlockSize() {
        return this.fsBlockSize;
    }

    public void setFsBlockSize(UInteger fsBlockSize) {
        this.fsBlockSize = fsBlockSize;
    }

    public ULong getFileSize() {
        return this.fileSize;
    }

    public void setFileSize(ULong fileSize) {
        this.fileSize = fileSize;
    }

    public ULong getAllocatedSize() {
        return this.allocatedSize;
    }

    public void setAllocatedSize(ULong allocatedSize) {
        this.allocatedSize = allocatedSize;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbSysTablespaces (");

        sb.append(space);
        sb.append(", ").append(name);
        sb.append(", ").append(flag);
        sb.append(", ").append(fileFormat);
        sb.append(", ").append(rowFormat);
        sb.append(", ").append(pageSize);
        sb.append(", ").append(zipPageSize);
        sb.append(", ").append(spaceType);
        sb.append(", ").append(fsBlockSize);
        sb.append(", ").append(fileSize);
        sb.append(", ").append(allocatedSize);

        sb.append(")");
        return sb.toString();
    }
}
