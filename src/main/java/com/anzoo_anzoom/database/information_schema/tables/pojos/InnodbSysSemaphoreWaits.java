/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;

import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbSysSemaphoreWaits implements Serializable {

    private static final long serialVersionUID = -61467204;

    private ULong    threadId;
    private String   objectName;
    private String   file;
    private UInteger line;
    private ULong    waitTime;
    private ULong    waitObject;
    private String   waitType;
    private ULong    holderThreadId;
    private String   holderFile;
    private UInteger holderLine;
    private String   createdFile;
    private UInteger createdLine;
    private ULong    writerThread;
    private String   reservationMode;
    private UInteger readers;
    private ULong    waitersFlag;
    private ULong    lockWord;
    private String   lastReaderFile;
    private UInteger lastReaderLine;
    private String   lastWriterFile;
    private UInteger lastWriterLine;
    private UInteger osWaitCount;

    public InnodbSysSemaphoreWaits() {}

    public InnodbSysSemaphoreWaits(InnodbSysSemaphoreWaits value) {
        this.threadId = value.threadId;
        this.objectName = value.objectName;
        this.file = value.file;
        this.line = value.line;
        this.waitTime = value.waitTime;
        this.waitObject = value.waitObject;
        this.waitType = value.waitType;
        this.holderThreadId = value.holderThreadId;
        this.holderFile = value.holderFile;
        this.holderLine = value.holderLine;
        this.createdFile = value.createdFile;
        this.createdLine = value.createdLine;
        this.writerThread = value.writerThread;
        this.reservationMode = value.reservationMode;
        this.readers = value.readers;
        this.waitersFlag = value.waitersFlag;
        this.lockWord = value.lockWord;
        this.lastReaderFile = value.lastReaderFile;
        this.lastReaderLine = value.lastReaderLine;
        this.lastWriterFile = value.lastWriterFile;
        this.lastWriterLine = value.lastWriterLine;
        this.osWaitCount = value.osWaitCount;
    }

    public InnodbSysSemaphoreWaits(
        ULong    threadId,
        String   objectName,
        String   file,
        UInteger line,
        ULong    waitTime,
        ULong    waitObject,
        String   waitType,
        ULong    holderThreadId,
        String   holderFile,
        UInteger holderLine,
        String   createdFile,
        UInteger createdLine,
        ULong    writerThread,
        String   reservationMode,
        UInteger readers,
        ULong    waitersFlag,
        ULong    lockWord,
        String   lastReaderFile,
        UInteger lastReaderLine,
        String   lastWriterFile,
        UInteger lastWriterLine,
        UInteger osWaitCount
    ) {
        this.threadId = threadId;
        this.objectName = objectName;
        this.file = file;
        this.line = line;
        this.waitTime = waitTime;
        this.waitObject = waitObject;
        this.waitType = waitType;
        this.holderThreadId = holderThreadId;
        this.holderFile = holderFile;
        this.holderLine = holderLine;
        this.createdFile = createdFile;
        this.createdLine = createdLine;
        this.writerThread = writerThread;
        this.reservationMode = reservationMode;
        this.readers = readers;
        this.waitersFlag = waitersFlag;
        this.lockWord = lockWord;
        this.lastReaderFile = lastReaderFile;
        this.lastReaderLine = lastReaderLine;
        this.lastWriterFile = lastWriterFile;
        this.lastWriterLine = lastWriterLine;
        this.osWaitCount = osWaitCount;
    }

    public ULong getThreadId() {
        return this.threadId;
    }

    public void setThreadId(ULong threadId) {
        this.threadId = threadId;
    }

    public String getObjectName() {
        return this.objectName;
    }

    public void setObjectName(String objectName) {
        this.objectName = objectName;
    }

    public String getFile() {
        return this.file;
    }

    public void setFile(String file) {
        this.file = file;
    }

    public UInteger getLine() {
        return this.line;
    }

    public void setLine(UInteger line) {
        this.line = line;
    }

    public ULong getWaitTime() {
        return this.waitTime;
    }

    public void setWaitTime(ULong waitTime) {
        this.waitTime = waitTime;
    }

    public ULong getWaitObject() {
        return this.waitObject;
    }

    public void setWaitObject(ULong waitObject) {
        this.waitObject = waitObject;
    }

    public String getWaitType() {
        return this.waitType;
    }

    public void setWaitType(String waitType) {
        this.waitType = waitType;
    }

    public ULong getHolderThreadId() {
        return this.holderThreadId;
    }

    public void setHolderThreadId(ULong holderThreadId) {
        this.holderThreadId = holderThreadId;
    }

    public String getHolderFile() {
        return this.holderFile;
    }

    public void setHolderFile(String holderFile) {
        this.holderFile = holderFile;
    }

    public UInteger getHolderLine() {
        return this.holderLine;
    }

    public void setHolderLine(UInteger holderLine) {
        this.holderLine = holderLine;
    }

    public String getCreatedFile() {
        return this.createdFile;
    }

    public void setCreatedFile(String createdFile) {
        this.createdFile = createdFile;
    }

    public UInteger getCreatedLine() {
        return this.createdLine;
    }

    public void setCreatedLine(UInteger createdLine) {
        this.createdLine = createdLine;
    }

    public ULong getWriterThread() {
        return this.writerThread;
    }

    public void setWriterThread(ULong writerThread) {
        this.writerThread = writerThread;
    }

    public String getReservationMode() {
        return this.reservationMode;
    }

    public void setReservationMode(String reservationMode) {
        this.reservationMode = reservationMode;
    }

    public UInteger getReaders() {
        return this.readers;
    }

    public void setReaders(UInteger readers) {
        this.readers = readers;
    }

    public ULong getWaitersFlag() {
        return this.waitersFlag;
    }

    public void setWaitersFlag(ULong waitersFlag) {
        this.waitersFlag = waitersFlag;
    }

    public ULong getLockWord() {
        return this.lockWord;
    }

    public void setLockWord(ULong lockWord) {
        this.lockWord = lockWord;
    }

    public String getLastReaderFile() {
        return this.lastReaderFile;
    }

    public void setLastReaderFile(String lastReaderFile) {
        this.lastReaderFile = lastReaderFile;
    }

    public UInteger getLastReaderLine() {
        return this.lastReaderLine;
    }

    public void setLastReaderLine(UInteger lastReaderLine) {
        this.lastReaderLine = lastReaderLine;
    }

    public String getLastWriterFile() {
        return this.lastWriterFile;
    }

    public void setLastWriterFile(String lastWriterFile) {
        this.lastWriterFile = lastWriterFile;
    }

    public UInteger getLastWriterLine() {
        return this.lastWriterLine;
    }

    public void setLastWriterLine(UInteger lastWriterLine) {
        this.lastWriterLine = lastWriterLine;
    }

    public UInteger getOsWaitCount() {
        return this.osWaitCount;
    }

    public void setOsWaitCount(UInteger osWaitCount) {
        this.osWaitCount = osWaitCount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("InnodbSysSemaphoreWaits (");

        sb.append(threadId);
        sb.append(", ").append(objectName);
        sb.append(", ").append(file);
        sb.append(", ").append(line);
        sb.append(", ").append(waitTime);
        sb.append(", ").append(waitObject);
        sb.append(", ").append(waitType);
        sb.append(", ").append(holderThreadId);
        sb.append(", ").append(holderFile);
        sb.append(", ").append(holderLine);
        sb.append(", ").append(createdFile);
        sb.append(", ").append(createdLine);
        sb.append(", ").append(writerThread);
        sb.append(", ").append(reservationMode);
        sb.append(", ").append(readers);
        sb.append(", ").append(waitersFlag);
        sb.append(", ").append(lockWord);
        sb.append(", ").append(lastReaderFile);
        sb.append(", ").append(lastReaderLine);
        sb.append(", ").append(lastWriterFile);
        sb.append(", ").append(lastWriterLine);
        sb.append(", ").append(osWaitCount);

        sb.append(")");
        return sb.toString();
    }
}
