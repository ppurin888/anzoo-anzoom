/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables;


import com.anzoo_anzoom.database.information_schema.InformationSchema;
import com.anzoo_anzoom.database.information_schema.tables.records.UserVariablesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserVariables extends TableImpl<UserVariablesRecord> {

    private static final long serialVersionUID = 1912881138;

    /**
     * The reference instance of <code>information_schema.user_variables</code>
     */
    public static final UserVariables USER_VARIABLES = new UserVariables();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserVariablesRecord> getRecordType() {
        return UserVariablesRecord.class;
    }

    /**
     * The column <code>information_schema.user_variables.VARIABLE_NAME</code>.
     */
    public final TableField<UserVariablesRecord, String> VARIABLE_NAME = createField("VARIABLE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.user_variables.VARIABLE_VALUE</code>.
     */
    public final TableField<UserVariablesRecord, String> VARIABLE_VALUE = createField("VARIABLE_VALUE", org.jooq.impl.SQLDataType.VARCHAR(2048).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.user_variables.VARIABLE_TYPE</code>.
     */
    public final TableField<UserVariablesRecord, String> VARIABLE_TYPE = createField("VARIABLE_TYPE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.user_variables.CHARACTER_SET_NAME</code>.
     */
    public final TableField<UserVariablesRecord, String> CHARACTER_SET_NAME = createField("CHARACTER_SET_NAME", org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>information_schema.user_variables</code> table reference
     */
    public UserVariables() {
        this(DSL.name("user_variables"), null);
    }

    /**
     * Create an aliased <code>information_schema.user_variables</code> table reference
     */
    public UserVariables(String alias) {
        this(DSL.name(alias), USER_VARIABLES);
    }

    /**
     * Create an aliased <code>information_schema.user_variables</code> table reference
     */
    public UserVariables(Name alias) {
        this(alias, USER_VARIABLES);
    }

    private UserVariables(Name alias, Table<UserVariablesRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserVariables(Name alias, Table<UserVariablesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserVariables as(String alias) {
        return new UserVariables(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserVariables as(Name alias) {
        return new UserVariables(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserVariables rename(String name) {
        return new UserVariables(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserVariables rename(Name name) {
        return new UserVariables(name, null);
    }
}
