/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables;


import com.anzoo_anzoom.database.information_schema.InformationSchema;
import com.anzoo_anzoom.database.information_schema.tables.records.InnodbTablespacesScrubbingRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbTablespacesScrubbing extends TableImpl<InnodbTablespacesScrubbingRecord> {

    private static final long serialVersionUID = -656214402;

    /**
     * The reference instance of <code>information_schema.INNODB_TABLESPACES_SCRUBBING</code>
     */
    public static final InnodbTablespacesScrubbing INNODB_TABLESPACES_SCRUBBING = new InnodbTablespacesScrubbing();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbTablespacesScrubbingRecord> getRecordType() {
        return InnodbTablespacesScrubbingRecord.class;
    }

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.SPACE</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, ULong> SPACE = createField("SPACE", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.NAME</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(655).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.COMPRESSED</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, UInteger> COMPRESSED = createField("COMPRESSED", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.LAST_SCRUB_COMPLETED</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, Timestamp> LAST_SCRUB_COMPLETED = createField("LAST_SCRUB_COMPLETED", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.CURRENT_SCRUB_STARTED</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, Timestamp> CURRENT_SCRUB_STARTED = createField("CURRENT_SCRUB_STARTED", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.CURRENT_SCRUB_ACTIVE_THREADS</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, UInteger> CURRENT_SCRUB_ACTIVE_THREADS = createField("CURRENT_SCRUB_ACTIVE_THREADS", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.CURRENT_SCRUB_PAGE_NUMBER</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, ULong> CURRENT_SCRUB_PAGE_NUMBER = createField("CURRENT_SCRUB_PAGE_NUMBER", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.CURRENT_SCRUB_MAX_PAGE_NUMBER</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, ULong> CURRENT_SCRUB_MAX_PAGE_NUMBER = createField("CURRENT_SCRUB_MAX_PAGE_NUMBER", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.INNODB_TABLESPACES_SCRUBBING.ROTATING_OR_FLUSHING</code>.
     */
    public final TableField<InnodbTablespacesScrubbingRecord, UInteger> ROTATING_OR_FLUSHING = createField("ROTATING_OR_FLUSHING", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGERUNSIGNED)), this, "");

    /**
     * Create a <code>information_schema.INNODB_TABLESPACES_SCRUBBING</code> table reference
     */
    public InnodbTablespacesScrubbing() {
        this(DSL.name("INNODB_TABLESPACES_SCRUBBING"), null);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_TABLESPACES_SCRUBBING</code> table reference
     */
    public InnodbTablespacesScrubbing(String alias) {
        this(DSL.name(alias), INNODB_TABLESPACES_SCRUBBING);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_TABLESPACES_SCRUBBING</code> table reference
     */
    public InnodbTablespacesScrubbing(Name alias) {
        this(alias, INNODB_TABLESPACES_SCRUBBING);
    }

    private InnodbTablespacesScrubbing(Name alias, Table<InnodbTablespacesScrubbingRecord> aliased) {
        this(alias, aliased, null);
    }

    private InnodbTablespacesScrubbing(Name alias, Table<InnodbTablespacesScrubbingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbTablespacesScrubbing as(String alias) {
        return new InnodbTablespacesScrubbing(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbTablespacesScrubbing as(Name alias) {
        return new InnodbTablespacesScrubbing(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbTablespacesScrubbing rename(String name) {
        return new InnodbTablespacesScrubbing(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbTablespacesScrubbing rename(Name name) {
        return new InnodbTablespacesScrubbing(name, null);
    }
}
