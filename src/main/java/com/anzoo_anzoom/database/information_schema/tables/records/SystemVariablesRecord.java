/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables.records;


import com.anzoo_anzoom.database.information_schema.tables.SystemVariables;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemVariablesRecord extends TableRecordImpl<SystemVariablesRecord> implements Record14<String, String, String, String, String, String, String, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = -1548106905;

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_NAME</code>.
     */
    public void setVariableName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_NAME</code>.
     */
    public String getVariableName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.SESSION_VALUE</code>.
     */
    public void setSessionValue(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.SESSION_VALUE</code>.
     */
    public String getSessionValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.GLOBAL_VALUE</code>.
     */
    public void setGlobalValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.GLOBAL_VALUE</code>.
     */
    public String getGlobalValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.GLOBAL_VALUE_ORIGIN</code>.
     */
    public void setGlobalValueOrigin(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.GLOBAL_VALUE_ORIGIN</code>.
     */
    public String getGlobalValueOrigin() {
        return (String) get(3);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.DEFAULT_VALUE</code>.
     */
    public void setDefaultValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.DEFAULT_VALUE</code>.
     */
    public String getDefaultValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_SCOPE</code>.
     */
    public void setVariableScope(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_SCOPE</code>.
     */
    public String getVariableScope() {
        return (String) get(5);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_TYPE</code>.
     */
    public void setVariableType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_TYPE</code>.
     */
    public String getVariableType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_COMMENT</code>.
     */
    public void setVariableComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.VARIABLE_COMMENT</code>.
     */
    public String getVariableComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_MIN_VALUE</code>.
     */
    public void setNumericMinValue(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_MIN_VALUE</code>.
     */
    public String getNumericMinValue() {
        return (String) get(8);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_MAX_VALUE</code>.
     */
    public void setNumericMaxValue(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_MAX_VALUE</code>.
     */
    public String getNumericMaxValue() {
        return (String) get(9);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_BLOCK_SIZE</code>.
     */
    public void setNumericBlockSize(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.NUMERIC_BLOCK_SIZE</code>.
     */
    public String getNumericBlockSize() {
        return (String) get(10);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.ENUM_VALUE_LIST</code>.
     */
    public void setEnumValueList(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.ENUM_VALUE_LIST</code>.
     */
    public String getEnumValueList() {
        return (String) get(11);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.READ_ONLY</code>.
     */
    public void setReadOnly(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.READ_ONLY</code>.
     */
    public String getReadOnly() {
        return (String) get(12);
    }

    /**
     * Setter for <code>information_schema.SYSTEM_VARIABLES.COMMAND_LINE_ARGUMENT</code>.
     */
    public void setCommandLineArgument(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>information_schema.SYSTEM_VARIABLES.COMMAND_LINE_ARGUMENT</code>.
     */
    public String getCommandLineArgument() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<String, String, String, String, String, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<String, String, String, String, String, String, String, String, String, String, String, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return SystemVariables.SYSTEM_VARIABLES.VARIABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return SystemVariables.SYSTEM_VARIABLES.SESSION_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return SystemVariables.SYSTEM_VARIABLES.GLOBAL_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return SystemVariables.SYSTEM_VARIABLES.GLOBAL_VALUE_ORIGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return SystemVariables.SYSTEM_VARIABLES.DEFAULT_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return SystemVariables.SYSTEM_VARIABLES.VARIABLE_SCOPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return SystemVariables.SYSTEM_VARIABLES.VARIABLE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return SystemVariables.SYSTEM_VARIABLES.VARIABLE_COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return SystemVariables.SYSTEM_VARIABLES.NUMERIC_MIN_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return SystemVariables.SYSTEM_VARIABLES.NUMERIC_MAX_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return SystemVariables.SYSTEM_VARIABLES.NUMERIC_BLOCK_SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return SystemVariables.SYSTEM_VARIABLES.ENUM_VALUE_LIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return SystemVariables.SYSTEM_VARIABLES.READ_ONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return SystemVariables.SYSTEM_VARIABLES.COMMAND_LINE_ARGUMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getVariableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSessionValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getGlobalValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getGlobalValueOrigin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDefaultValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getVariableScope();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getVariableType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getVariableComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getNumericMinValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getNumericMaxValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getNumericBlockSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getEnumValueList();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getReadOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getCommandLineArgument();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getVariableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSessionValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGlobalValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getGlobalValueOrigin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDefaultValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getVariableScope();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getVariableType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getVariableComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getNumericMinValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getNumericMaxValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getNumericBlockSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getEnumValueList();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getReadOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getCommandLineArgument();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value1(String value) {
        setVariableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value2(String value) {
        setSessionValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value3(String value) {
        setGlobalValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value4(String value) {
        setGlobalValueOrigin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value5(String value) {
        setDefaultValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value6(String value) {
        setVariableScope(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value7(String value) {
        setVariableType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value8(String value) {
        setVariableComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value9(String value) {
        setNumericMinValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value10(String value) {
        setNumericMaxValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value11(String value) {
        setNumericBlockSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value12(String value) {
        setEnumValueList(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value13(String value) {
        setReadOnly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord value14(String value) {
        setCommandLineArgument(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SystemVariablesRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SystemVariablesRecord
     */
    public SystemVariablesRecord() {
        super(SystemVariables.SYSTEM_VARIABLES);
    }

    /**
     * Create a detached, initialised SystemVariablesRecord
     */
    public SystemVariablesRecord(String variableName, String sessionValue, String globalValue, String globalValueOrigin, String defaultValue, String variableScope, String variableType, String variableComment, String numericMinValue, String numericMaxValue, String numericBlockSize, String enumValueList, String readOnly, String commandLineArgument) {
        super(SystemVariables.SYSTEM_VARIABLES);

        set(0, variableName);
        set(1, sessionValue);
        set(2, globalValue);
        set(3, globalValueOrigin);
        set(4, defaultValue);
        set(5, variableScope);
        set(6, variableType);
        set(7, variableComment);
        set(8, numericMinValue);
        set(9, numericMaxValue);
        set(10, numericBlockSize);
        set(11, enumValueList);
        set(12, readOnly);
        set(13, commandLineArgument);
    }
}
