/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables;


import com.anzoo_anzoom.database.information_schema.InformationSchema;
import com.anzoo_anzoom.database.information_schema.tables.records.InnodbCmpPerIndexRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbCmpPerIndex extends TableImpl<InnodbCmpPerIndexRecord> {

    private static final long serialVersionUID = -2020039527;

    /**
     * The reference instance of <code>information_schema.INNODB_CMP_PER_INDEX</code>
     */
    public static final InnodbCmpPerIndex INNODB_CMP_PER_INDEX = new InnodbCmpPerIndex();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InnodbCmpPerIndexRecord> getRecordType() {
        return InnodbCmpPerIndexRecord.class;
    }

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.database_name</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, String> DATABASE_NAME = createField("database_name", org.jooq.impl.SQLDataType.VARCHAR(192).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.table_name</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, String> TABLE_NAME = createField("table_name", org.jooq.impl.SQLDataType.VARCHAR(192).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.index_name</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR(192).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.compress_ops</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, Integer> COMPRESS_OPS = createField("compress_ops", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.compress_ops_ok</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, Integer> COMPRESS_OPS_OK = createField("compress_ops_ok", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.compress_time</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, Integer> COMPRESS_TIME = createField("compress_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.uncompress_ops</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, Integer> UNCOMPRESS_OPS = createField("uncompress_ops", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>information_schema.INNODB_CMP_PER_INDEX.uncompress_time</code>.
     */
    public final TableField<InnodbCmpPerIndexRecord, Integer> UNCOMPRESS_TIME = createField("uncompress_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>information_schema.INNODB_CMP_PER_INDEX</code> table reference
     */
    public InnodbCmpPerIndex() {
        this(DSL.name("INNODB_CMP_PER_INDEX"), null);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_CMP_PER_INDEX</code> table reference
     */
    public InnodbCmpPerIndex(String alias) {
        this(DSL.name(alias), INNODB_CMP_PER_INDEX);
    }

    /**
     * Create an aliased <code>information_schema.INNODB_CMP_PER_INDEX</code> table reference
     */
    public InnodbCmpPerIndex(Name alias) {
        this(alias, INNODB_CMP_PER_INDEX);
    }

    private InnodbCmpPerIndex(Name alias, Table<InnodbCmpPerIndexRecord> aliased) {
        this(alias, aliased, null);
    }

    private InnodbCmpPerIndex(Name alias, Table<InnodbCmpPerIndexRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbCmpPerIndex as(String alias) {
        return new InnodbCmpPerIndex(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InnodbCmpPerIndex as(Name alias) {
        return new InnodbCmpPerIndex(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbCmpPerIndex rename(String name) {
        return new InnodbCmpPerIndex(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InnodbCmpPerIndex rename(Name name) {
        return new InnodbCmpPerIndex(name, null);
    }
}
