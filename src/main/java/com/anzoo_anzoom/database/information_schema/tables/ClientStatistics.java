/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.information_schema.tables;


import com.anzoo_anzoom.database.information_schema.InformationSchema;
import com.anzoo_anzoom.database.information_schema.tables.records.ClientStatisticsRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientStatistics extends TableImpl<ClientStatisticsRecord> {

    private static final long serialVersionUID = -1765921331;

    /**
     * The reference instance of <code>information_schema.CLIENT_STATISTICS</code>
     */
    public static final ClientStatistics CLIENT_STATISTICS = new ClientStatistics();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientStatisticsRecord> getRecordType() {
        return ClientStatisticsRecord.class;
    }

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.CLIENT</code>.
     */
    public final TableField<ClientStatisticsRecord, String> CLIENT = createField("CLIENT", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("''", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.TOTAL_CONNECTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> TOTAL_CONNECTIONS = createField("TOTAL_CONNECTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.CONCURRENT_CONNECTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> CONCURRENT_CONNECTIONS = createField("CONCURRENT_CONNECTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.CONNECTED_TIME</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> CONNECTED_TIME = createField("CONNECTED_TIME", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.BUSY_TIME</code>.
     */
    public final TableField<ClientStatisticsRecord, Double> BUSY_TIME = createField("BUSY_TIME", org.jooq.impl.SQLDataType.DOUBLE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.CPU_TIME</code>.
     */
    public final TableField<ClientStatisticsRecord, Double> CPU_TIME = createField("CPU_TIME", org.jooq.impl.SQLDataType.DOUBLE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.BYTES_RECEIVED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> BYTES_RECEIVED = createField("BYTES_RECEIVED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.BYTES_SENT</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> BYTES_SENT = createField("BYTES_SENT", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.BINLOG_BYTES_WRITTEN</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> BINLOG_BYTES_WRITTEN = createField("BINLOG_BYTES_WRITTEN", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROWS_READ</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROWS_READ = createField("ROWS_READ", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROWS_SENT</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROWS_SENT = createField("ROWS_SENT", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROWS_DELETED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROWS_DELETED = createField("ROWS_DELETED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROWS_INSERTED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROWS_INSERTED = createField("ROWS_INSERTED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROWS_UPDATED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROWS_UPDATED = createField("ROWS_UPDATED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.SELECT_COMMANDS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> SELECT_COMMANDS = createField("SELECT_COMMANDS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.UPDATE_COMMANDS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> UPDATE_COMMANDS = createField("UPDATE_COMMANDS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.OTHER_COMMANDS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> OTHER_COMMANDS = createField("OTHER_COMMANDS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.COMMIT_TRANSACTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> COMMIT_TRANSACTIONS = createField("COMMIT_TRANSACTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ROLLBACK_TRANSACTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ROLLBACK_TRANSACTIONS = createField("ROLLBACK_TRANSACTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.DENIED_CONNECTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> DENIED_CONNECTIONS = createField("DENIED_CONNECTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.LOST_CONNECTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> LOST_CONNECTIONS = createField("LOST_CONNECTIONS", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.ACCESS_DENIED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> ACCESS_DENIED = createField("ACCESS_DENIED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.EMPTY_QUERIES</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> EMPTY_QUERIES = createField("EMPTY_QUERIES", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.TOTAL_SSL_CONNECTIONS</code>.
     */
    public final TableField<ClientStatisticsRecord, ULong> TOTAL_SSL_CONNECTIONS = createField("TOTAL_SSL_CONNECTIONS", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * The column <code>information_schema.CLIENT_STATISTICS.MAX_STATEMENT_TIME_EXCEEDED</code>.
     */
    public final TableField<ClientStatisticsRecord, Long> MAX_STATEMENT_TIME_EXCEEDED = createField("MAX_STATEMENT_TIME_EXCEEDED", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>information_schema.CLIENT_STATISTICS</code> table reference
     */
    public ClientStatistics() {
        this(DSL.name("CLIENT_STATISTICS"), null);
    }

    /**
     * Create an aliased <code>information_schema.CLIENT_STATISTICS</code> table reference
     */
    public ClientStatistics(String alias) {
        this(DSL.name(alias), CLIENT_STATISTICS);
    }

    /**
     * Create an aliased <code>information_schema.CLIENT_STATISTICS</code> table reference
     */
    public ClientStatistics(Name alias) {
        this(alias, CLIENT_STATISTICS);
    }

    private ClientStatistics(Name alias, Table<ClientStatisticsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientStatistics(Name alias, Table<ClientStatisticsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return InformationSchema.INFORMATION_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientStatistics as(String alias) {
        return new ClientStatistics(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientStatistics as(Name alias) {
        return new ClientStatistics(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientStatistics rename(String name) {
        return new ClientStatistics(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientStatistics rename(Name name) {
        return new ClientStatistics(name, null);
    }
}
