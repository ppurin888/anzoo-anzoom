/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.anzoo_anzoom;


import com.anzoo_anzoom.database.anzoo_anzoom.tables.AnjuTags;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.AuthenticationAccessTokens;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.Comments;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.Posts;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserContactInfoTypes;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserContactInfos;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserContactLogs;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserContactSubjects;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserPasswordEncryptionTypes;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserPasswordHistories;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.Users;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.AnjuTagsRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.AuthenticationAccessTokensRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.CommentsRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.PostsRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserContactInfoTypesRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserContactInfosRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserContactLogsRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserContactSubjectsRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserPasswordEncryptionTypesRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserPasswordHistoriesRecord;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>anzoo_anzoom</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AnjuTagsRecord, Integer> IDENTITY_ANJU_TAGS = Identities0.IDENTITY_ANJU_TAGS;
    public static final Identity<AuthenticationAccessTokensRecord, Long> IDENTITY_AUTHENTICATION_ACCESS_TOKENS = Identities0.IDENTITY_AUTHENTICATION_ACCESS_TOKENS;
    public static final Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = Identities0.IDENTITY_COMMENTS;
    public static final Identity<PostsRecord, Integer> IDENTITY_POSTS = Identities0.IDENTITY_POSTS;
    public static final Identity<UsersRecord, Integer> IDENTITY_USERS = Identities0.IDENTITY_USERS;
    public static final Identity<UserContactInfosRecord, Integer> IDENTITY_USER_CONTACT_INFOS = Identities0.IDENTITY_USER_CONTACT_INFOS;
    public static final Identity<UserContactInfoTypesRecord, Integer> IDENTITY_USER_CONTACT_INFO_TYPES = Identities0.IDENTITY_USER_CONTACT_INFO_TYPES;
    public static final Identity<UserContactLogsRecord, Integer> IDENTITY_USER_CONTACT_LOGS = Identities0.IDENTITY_USER_CONTACT_LOGS;
    public static final Identity<UserContactSubjectsRecord, Integer> IDENTITY_USER_CONTACT_SUBJECTS = Identities0.IDENTITY_USER_CONTACT_SUBJECTS;
    public static final Identity<UserPasswordEncryptionTypesRecord, Integer> IDENTITY_USER_PASSWORD_ENCRYPTION_TYPES = Identities0.IDENTITY_USER_PASSWORD_ENCRYPTION_TYPES;
    public static final Identity<UserPasswordHistoriesRecord, Integer> IDENTITY_USER_PASSWORD_HISTORIES = Identities0.IDENTITY_USER_PASSWORD_HISTORIES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnjuTagsRecord> KEY_ANJU_TAGS_PRIMARY = UniqueKeys0.KEY_ANJU_TAGS_PRIMARY;
    public static final UniqueKey<AnjuTagsRecord> KEY_ANJU_TAGS_ANJU_TAGS_TAG_UINDEX = UniqueKeys0.KEY_ANJU_TAGS_ANJU_TAGS_TAG_UINDEX;
    public static final UniqueKey<AuthenticationAccessTokensRecord> KEY_AUTHENTICATION_ACCESS_TOKENS_PRIMARY = UniqueKeys0.KEY_AUTHENTICATION_ACCESS_TOKENS_PRIMARY;
    public static final UniqueKey<AuthenticationAccessTokensRecord> KEY_AUTHENTICATION_ACCESS_TOKENS_AUTHENTICATION_ACCESS_TOKENS_AUTH_ID_ACCESS_TOKEN_UINDEX = UniqueKeys0.KEY_AUTHENTICATION_ACCESS_TOKENS_AUTHENTICATION_ACCESS_TOKENS_AUTH_ID_ACCESS_TOKEN_UINDEX;
    public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = UniqueKeys0.KEY_COMMENTS_PRIMARY;
    public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = UniqueKeys0.KEY_POSTS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_USERS_AUTH_ID_UINDEX = UniqueKeys0.KEY_USERS_USERS_AUTH_ID_UINDEX;
    public static final UniqueKey<UserContactInfosRecord> KEY_USER_CONTACT_INFOS_PRIMARY = UniqueKeys0.KEY_USER_CONTACT_INFOS_PRIMARY;
    public static final UniqueKey<UserContactInfosRecord> KEY_USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_ID_TYPE_ID_UINDEX = UniqueKeys0.KEY_USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_ID_TYPE_ID_UINDEX;
    public static final UniqueKey<UserContactInfoTypesRecord> KEY_USER_CONTACT_INFO_TYPES_PRIMARY = UniqueKeys0.KEY_USER_CONTACT_INFO_TYPES_PRIMARY;
    public static final UniqueKey<UserContactInfoTypesRecord> KEY_USER_CONTACT_INFO_TYPES_USER_CONTACT_INFO_TYPES_TYPE_NAME_UINDEX = UniqueKeys0.KEY_USER_CONTACT_INFO_TYPES_USER_CONTACT_INFO_TYPES_TYPE_NAME_UINDEX;
    public static final UniqueKey<UserContactLogsRecord> KEY_USER_CONTACT_LOGS_PRIMARY = UniqueKeys0.KEY_USER_CONTACT_LOGS_PRIMARY;
    public static final UniqueKey<UserContactSubjectsRecord> KEY_USER_CONTACT_SUBJECTS_PRIMARY = UniqueKeys0.KEY_USER_CONTACT_SUBJECTS_PRIMARY;
    public static final UniqueKey<UserContactSubjectsRecord> KEY_USER_CONTACT_SUBJECTS_USER_CONTACT_SUBJECTS_TITLE_UINDEX = UniqueKeys0.KEY_USER_CONTACT_SUBJECTS_USER_CONTACT_SUBJECTS_TITLE_UINDEX;
    public static final UniqueKey<UserPasswordEncryptionTypesRecord> KEY_USER_PASSWORD_ENCRYPTION_TYPES_PRIMARY = UniqueKeys0.KEY_USER_PASSWORD_ENCRYPTION_TYPES_PRIMARY;
    public static final UniqueKey<UserPasswordEncryptionTypesRecord> KEY_USER_PASSWORD_ENCRYPTION_TYPES_USER_PASSWORD_ENCRYPTION_TYPES_TYPE_NAME_SECRET_KEY_UINDEX = UniqueKeys0.KEY_USER_PASSWORD_ENCRYPTION_TYPES_USER_PASSWORD_ENCRYPTION_TYPES_TYPE_NAME_SECRET_KEY_UINDEX;
    public static final UniqueKey<UserPasswordHistoriesRecord> KEY_USER_PASSWORD_HISTORIES_PRIMARY = UniqueKeys0.KEY_USER_PASSWORD_HISTORIES_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthenticationAccessTokensRecord, UsersRecord> AUTHENTICATION_ACCESS_TOKENS_USERS_ID_FK = ForeignKeys0.AUTHENTICATION_ACCESS_TOKENS_USERS_ID_FK;
    public static final ForeignKey<CommentsRecord, UsersRecord> COMMENTS_USERS_ID_FK = ForeignKeys0.COMMENTS_USERS_ID_FK;
    public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS_POSTS_ID_FK = ForeignKeys0.COMMENTS_POSTS_ID_FK;
    public static final ForeignKey<PostsRecord, UsersRecord> POSTS_USERS_ID_FK = ForeignKeys0.POSTS_USERS_ID_FK;
    public static final ForeignKey<UsersRecord, UserPasswordEncryptionTypesRecord> USERS_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK = ForeignKeys0.USERS_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK;
    public static final ForeignKey<UserContactInfosRecord, UsersRecord> USER_CONTACT_INFOS_USERS_ID_FK = ForeignKeys0.USER_CONTACT_INFOS_USERS_ID_FK;
    public static final ForeignKey<UserContactInfosRecord, UserContactInfoTypesRecord> USER_CONTACT_INFOS_USER_CONTACT_INFO_TYPES_ID_FK = ForeignKeys0.USER_CONTACT_INFOS_USER_CONTACT_INFO_TYPES_ID_FK;
    public static final ForeignKey<UserContactLogsRecord, UserContactInfosRecord> USER_CONTACT_LOGS_USER_CONTACT_INFOS_ID_FK = ForeignKeys0.USER_CONTACT_LOGS_USER_CONTACT_INFOS_ID_FK;
    public static final ForeignKey<UserContactLogsRecord, UserContactSubjectsRecord> USER_CONTACT_LOGS_USER_CONTACT_SUBJECTS_ID_FK = ForeignKeys0.USER_CONTACT_LOGS_USER_CONTACT_SUBJECTS_ID_FK;
    public static final ForeignKey<UserPasswordHistoriesRecord, UserPasswordEncryptionTypesRecord> USER_PASSWORD_HISTORIES_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK = ForeignKeys0.USER_PASSWORD_HISTORIES_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK;
    public static final ForeignKey<UserPasswordHistoriesRecord, UsersRecord> USER_PASSWORD_HISTORIES_USERS_ID_FK = ForeignKeys0.USER_PASSWORD_HISTORIES_USERS_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AnjuTagsRecord, Integer> IDENTITY_ANJU_TAGS = createIdentity(AnjuTags.ANJU_TAGS, AnjuTags.ANJU_TAGS.ID);
        public static Identity<AuthenticationAccessTokensRecord, Long> IDENTITY_AUTHENTICATION_ACCESS_TOKENS = createIdentity(AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS, AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS.ID);
        public static Identity<CommentsRecord, Integer> IDENTITY_COMMENTS = createIdentity(Comments.COMMENTS, Comments.COMMENTS.ID);
        public static Identity<PostsRecord, Integer> IDENTITY_POSTS = createIdentity(Posts.POSTS, Posts.POSTS.ID);
        public static Identity<UsersRecord, Integer> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.ID);
        public static Identity<UserContactInfosRecord, Integer> IDENTITY_USER_CONTACT_INFOS = createIdentity(UserContactInfos.USER_CONTACT_INFOS, UserContactInfos.USER_CONTACT_INFOS.ID);
        public static Identity<UserContactInfoTypesRecord, Integer> IDENTITY_USER_CONTACT_INFO_TYPES = createIdentity(UserContactInfoTypes.USER_CONTACT_INFO_TYPES, UserContactInfoTypes.USER_CONTACT_INFO_TYPES.ID);
        public static Identity<UserContactLogsRecord, Integer> IDENTITY_USER_CONTACT_LOGS = createIdentity(UserContactLogs.USER_CONTACT_LOGS, UserContactLogs.USER_CONTACT_LOGS.ID);
        public static Identity<UserContactSubjectsRecord, Integer> IDENTITY_USER_CONTACT_SUBJECTS = createIdentity(UserContactSubjects.USER_CONTACT_SUBJECTS, UserContactSubjects.USER_CONTACT_SUBJECTS.ID);
        public static Identity<UserPasswordEncryptionTypesRecord, Integer> IDENTITY_USER_PASSWORD_ENCRYPTION_TYPES = createIdentity(UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES, UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.ID);
        public static Identity<UserPasswordHistoriesRecord, Integer> IDENTITY_USER_PASSWORD_HISTORIES = createIdentity(UserPasswordHistories.USER_PASSWORD_HISTORIES, UserPasswordHistories.USER_PASSWORD_HISTORIES.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AnjuTagsRecord> KEY_ANJU_TAGS_PRIMARY = createUniqueKey(AnjuTags.ANJU_TAGS, "KEY_anju_tags_PRIMARY", AnjuTags.ANJU_TAGS.ID);
        public static final UniqueKey<AnjuTagsRecord> KEY_ANJU_TAGS_ANJU_TAGS_TAG_UINDEX = createUniqueKey(AnjuTags.ANJU_TAGS, "KEY_anju_tags_anju_tags_tag_uindex", AnjuTags.ANJU_TAGS.TAG);
        public static final UniqueKey<AuthenticationAccessTokensRecord> KEY_AUTHENTICATION_ACCESS_TOKENS_PRIMARY = createUniqueKey(AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS, "KEY_authentication_access_tokens_PRIMARY", AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS.ID);
        public static final UniqueKey<AuthenticationAccessTokensRecord> KEY_AUTHENTICATION_ACCESS_TOKENS_AUTHENTICATION_ACCESS_TOKENS_AUTH_ID_ACCESS_TOKEN_UINDEX = createUniqueKey(AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS, "KEY_authentication_access_tokens_authentication_access_tokens_auth_id_access_token_uindex", AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS.USER_ID, AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS.ACCESS_TOKEN);
        public static final UniqueKey<CommentsRecord> KEY_COMMENTS_PRIMARY = createUniqueKey(Comments.COMMENTS, "KEY_comments_PRIMARY", Comments.COMMENTS.ID);
        public static final UniqueKey<PostsRecord> KEY_POSTS_PRIMARY = createUniqueKey(Posts.POSTS, "KEY_posts_PRIMARY", Posts.POSTS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_USERS_AUTH_ID_UINDEX = createUniqueKey(Users.USERS, "KEY_users_users_auth_id_uindex", Users.USERS.AUTH_ID);
        public static final UniqueKey<UserContactInfosRecord> KEY_USER_CONTACT_INFOS_PRIMARY = createUniqueKey(UserContactInfos.USER_CONTACT_INFOS, "KEY_user_contact_infos_PRIMARY", UserContactInfos.USER_CONTACT_INFOS.ID);
        public static final UniqueKey<UserContactInfosRecord> KEY_USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_ID_TYPE_ID_UINDEX = createUniqueKey(UserContactInfos.USER_CONTACT_INFOS, "KEY_user_contact_infos_user_contact_infos_user_id_type_id_uindex", UserContactInfos.USER_CONTACT_INFOS.USER_ID, UserContactInfos.USER_CONTACT_INFOS.TYPE_ID);
        public static final UniqueKey<UserContactInfoTypesRecord> KEY_USER_CONTACT_INFO_TYPES_PRIMARY = createUniqueKey(UserContactInfoTypes.USER_CONTACT_INFO_TYPES, "KEY_user_contact_info_types_PRIMARY", UserContactInfoTypes.USER_CONTACT_INFO_TYPES.ID);
        public static final UniqueKey<UserContactInfoTypesRecord> KEY_USER_CONTACT_INFO_TYPES_USER_CONTACT_INFO_TYPES_TYPE_NAME_UINDEX = createUniqueKey(UserContactInfoTypes.USER_CONTACT_INFO_TYPES, "KEY_user_contact_info_types_user_contact_info_types_type_name_uindex", UserContactInfoTypes.USER_CONTACT_INFO_TYPES.TYPE_NAME);
        public static final UniqueKey<UserContactLogsRecord> KEY_USER_CONTACT_LOGS_PRIMARY = createUniqueKey(UserContactLogs.USER_CONTACT_LOGS, "KEY_user_contact_logs_PRIMARY", UserContactLogs.USER_CONTACT_LOGS.ID);
        public static final UniqueKey<UserContactSubjectsRecord> KEY_USER_CONTACT_SUBJECTS_PRIMARY = createUniqueKey(UserContactSubjects.USER_CONTACT_SUBJECTS, "KEY_user_contact_subjects_PRIMARY", UserContactSubjects.USER_CONTACT_SUBJECTS.ID);
        public static final UniqueKey<UserContactSubjectsRecord> KEY_USER_CONTACT_SUBJECTS_USER_CONTACT_SUBJECTS_TITLE_UINDEX = createUniqueKey(UserContactSubjects.USER_CONTACT_SUBJECTS, "KEY_user_contact_subjects_user_contact_subjects_title_uindex", UserContactSubjects.USER_CONTACT_SUBJECTS.TITLE);
        public static final UniqueKey<UserPasswordEncryptionTypesRecord> KEY_USER_PASSWORD_ENCRYPTION_TYPES_PRIMARY = createUniqueKey(UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES, "KEY_user_password_encryption_types_PRIMARY", UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.ID);
        public static final UniqueKey<UserPasswordEncryptionTypesRecord> KEY_USER_PASSWORD_ENCRYPTION_TYPES_USER_PASSWORD_ENCRYPTION_TYPES_TYPE_NAME_SECRET_KEY_UINDEX = createUniqueKey(UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES, "KEY_user_password_encryption_types_user_password_encryption_types_type_name_secret_key_uindex", UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.TYPE_NAME, UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.SECRET_KEY);
        public static final UniqueKey<UserPasswordHistoriesRecord> KEY_USER_PASSWORD_HISTORIES_PRIMARY = createUniqueKey(UserPasswordHistories.USER_PASSWORD_HISTORIES, "KEY_user_password_histories_PRIMARY", UserPasswordHistories.USER_PASSWORD_HISTORIES.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AuthenticationAccessTokensRecord, UsersRecord> AUTHENTICATION_ACCESS_TOKENS_USERS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USERS_PRIMARY, AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS, "authentication_access_tokens_users_id_fk", AuthenticationAccessTokens.AUTHENTICATION_ACCESS_TOKENS.USER_ID);
        public static final ForeignKey<CommentsRecord, UsersRecord> COMMENTS_USERS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USERS_PRIMARY, Comments.COMMENTS, "comments_users_id_fk", Comments.COMMENTS.USER_ID);
        public static final ForeignKey<CommentsRecord, PostsRecord> COMMENTS_POSTS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_POSTS_PRIMARY, Comments.COMMENTS, "comments_posts_id_fk", Comments.COMMENTS.POST_ID);
        public static final ForeignKey<PostsRecord, UsersRecord> POSTS_USERS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USERS_PRIMARY, Posts.POSTS, "posts_users_id_fk", Posts.POSTS.USER_ID);
        public static final ForeignKey<UsersRecord, UserPasswordEncryptionTypesRecord> USERS_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USER_PASSWORD_ENCRYPTION_TYPES_PRIMARY, Users.USERS, "users_user_password_encryption_types_id_fk", Users.USERS.PASSWORD_ENCRYPTION_TYPE_ID);
        public static final ForeignKey<UserContactInfosRecord, UsersRecord> USER_CONTACT_INFOS_USERS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USERS_PRIMARY, UserContactInfos.USER_CONTACT_INFOS, "user_contact_infos_users_id_fk", UserContactInfos.USER_CONTACT_INFOS.USER_ID);
        public static final ForeignKey<UserContactInfosRecord, UserContactInfoTypesRecord> USER_CONTACT_INFOS_USER_CONTACT_INFO_TYPES_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USER_CONTACT_INFO_TYPES_PRIMARY, UserContactInfos.USER_CONTACT_INFOS, "user_contact_infos_user_contact_info_types_id_fk", UserContactInfos.USER_CONTACT_INFOS.TYPE_ID);
        public static final ForeignKey<UserContactLogsRecord, UserContactInfosRecord> USER_CONTACT_LOGS_USER_CONTACT_INFOS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USER_CONTACT_INFOS_PRIMARY, UserContactLogs.USER_CONTACT_LOGS, "user_contact_logs_user_contact_infos_id_fk", UserContactLogs.USER_CONTACT_LOGS.INFO_ID);
        public static final ForeignKey<UserContactLogsRecord, UserContactSubjectsRecord> USER_CONTACT_LOGS_USER_CONTACT_SUBJECTS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USER_CONTACT_SUBJECTS_PRIMARY, UserContactLogs.USER_CONTACT_LOGS, "user_contact_logs_user_contact_subjects_id_fk", UserContactLogs.USER_CONTACT_LOGS.SUBJECT_ID);
        public static final ForeignKey<UserPasswordHistoriesRecord, UserPasswordEncryptionTypesRecord> USER_PASSWORD_HISTORIES_USER_PASSWORD_ENCRYPTION_TYPES_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USER_PASSWORD_ENCRYPTION_TYPES_PRIMARY, UserPasswordHistories.USER_PASSWORD_HISTORIES, "user_password_histories_user_password_encryption_types_id_fk", UserPasswordHistories.USER_PASSWORD_HISTORIES.ENCRYPTION_TYPE_ID);
        public static final ForeignKey<UserPasswordHistoriesRecord, UsersRecord> USER_PASSWORD_HISTORIES_USERS_ID_FK = createForeignKey(com.anzoo_anzoom.database.anzoo_anzoom.Keys.KEY_USERS_PRIMARY, UserPasswordHistories.USER_PASSWORD_HISTORIES, "user_password_histories_users_id_fk", UserPasswordHistories.USER_PASSWORD_HISTORIES.USER_ID);
    }
}
