/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.anzoo_anzoom.tables;


import com.anzoo_anzoom.database.anzoo_anzoom.AnzooAnzoom;
import com.anzoo_anzoom.database.anzoo_anzoom.Indexes;
import com.anzoo_anzoom.database.anzoo_anzoom.Keys;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.UserContactInfosRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserContactInfos extends TableImpl<UserContactInfosRecord> {

    private static final long serialVersionUID = 2097761098;

    /**
     * The reference instance of <code>anzoo_anzoom.user_contact_infos</code>
     */
    public static final UserContactInfos USER_CONTACT_INFOS = new UserContactInfos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserContactInfosRecord> getRecordType() {
        return UserContactInfosRecord.class;
    }

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.id</code>.
     */
    public final TableField<UserContactInfosRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.info</code>.
     */
    public final TableField<UserContactInfosRecord, String> INFO = createField("info", org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.user_id</code>.
     */
    public final TableField<UserContactInfosRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.type_id</code>.
     */
    public final TableField<UserContactInfosRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.created_at</code>.
     */
    public final TableField<UserContactInfosRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.updated_at</code>.
     */
    public final TableField<UserContactInfosRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>anzoo_anzoom.user_contact_infos.deleted_at</code>.
     */
    public final TableField<UserContactInfosRecord, Timestamp> DELETED_AT = createField("deleted_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>anzoo_anzoom.user_contact_infos</code> table reference
     */
    public UserContactInfos() {
        this(DSL.name("user_contact_infos"), null);
    }

    /**
     * Create an aliased <code>anzoo_anzoom.user_contact_infos</code> table reference
     */
    public UserContactInfos(String alias) {
        this(DSL.name(alias), USER_CONTACT_INFOS);
    }

    /**
     * Create an aliased <code>anzoo_anzoom.user_contact_infos</code> table reference
     */
    public UserContactInfos(Name alias) {
        this(alias, USER_CONTACT_INFOS);
    }

    private UserContactInfos(Name alias, Table<UserContactInfosRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserContactInfos(Name alias, Table<UserContactInfosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AnzooAnzoom.ANZOO_ANZOOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_CONTACT_INFOS_PRIMARY, Indexes.USER_CONTACT_INFOS_USER_CONTACT_INFOS_INFO_USER_ID_TYPE_ID_UINDEX, Indexes.USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_CONTACT_INFO_TYPES_ID_FK, Indexes.USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_ID_TYPE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserContactInfosRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_CONTACT_INFOS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserContactInfosRecord> getPrimaryKey() {
        return Keys.KEY_USER_CONTACT_INFOS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserContactInfosRecord>> getKeys() {
        return Arrays.<UniqueKey<UserContactInfosRecord>>asList(Keys.KEY_USER_CONTACT_INFOS_PRIMARY, Keys.KEY_USER_CONTACT_INFOS_USER_CONTACT_INFOS_INFO_USER_ID_TYPE_ID_UINDEX, Keys.KEY_USER_CONTACT_INFOS_USER_CONTACT_INFOS_USER_ID_TYPE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserContactInfosRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserContactInfosRecord, ?>>asList(Keys.USER_CONTACT_INFOS_USERS_ID_FK, Keys.USER_CONTACT_INFOS_USER_CONTACT_INFO_TYPES_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserContactInfos as(String alias) {
        return new UserContactInfos(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserContactInfos as(Name alias) {
        return new UserContactInfos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserContactInfos rename(String name) {
        return new UserContactInfos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserContactInfos rename(Name name) {
        return new UserContactInfos(name, null);
    }
}
