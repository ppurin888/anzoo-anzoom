/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.anzoo_anzoom.tables.records;


import com.anzoo_anzoom.database.anzoo_anzoom.tables.UserPasswordEncryptionTypes;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPasswordEncryptionTypesRecord extends UpdatableRecordImpl<UserPasswordEncryptionTypesRecord> implements Record6<Integer, String, byte[], String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 63338575;

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.type_name</code>.
     */
    public void setTypeName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.type_name</code>.
     */
    public String getTypeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.secret_key</code>.
     */
    public void setSecretKey(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.secret_key</code>.
     */
    public byte[] getSecretKey() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.title</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>anzoo_anzoom.user_password_encryption_types.deleted_at</code>.
     */
    public void setDeletedAt(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>anzoo_anzoom.user_password_encryption_types.deleted_at</code>.
     */
    public Timestamp getDeletedAt() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, byte[], String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, byte[], String, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.TYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.SECRET_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES.DELETED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getSecretKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getSecretKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value2(String value) {
        setTypeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value3(byte... value) {
        setSecretKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value4(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value5(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord value6(Timestamp value) {
        setDeletedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPasswordEncryptionTypesRecord values(Integer value1, String value2, byte[] value3, String value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserPasswordEncryptionTypesRecord
     */
    public UserPasswordEncryptionTypesRecord() {
        super(UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES);
    }

    /**
     * Create a detached, initialised UserPasswordEncryptionTypesRecord
     */
    public UserPasswordEncryptionTypesRecord(Integer id, String typeName, byte[] secretKey, String title, Timestamp createdAt, Timestamp deletedAt) {
        super(UserPasswordEncryptionTypes.USER_PASSWORD_ENCRYPTION_TYPES);

        set(0, id);
        set(1, typeName);
        set(2, secretKey);
        set(3, title);
        set(4, createdAt);
        set(5, deletedAt);
    }
}
