/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.anzoo_anzoom.tables;


import com.anzoo_anzoom.database.anzoo_anzoom.AnzooAnzoom;
import com.anzoo_anzoom.database.anzoo_anzoom.Indexes;
import com.anzoo_anzoom.database.anzoo_anzoom.Keys;
import com.anzoo_anzoom.database.anzoo_anzoom.tables.records.AnjuTagsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnjuTags extends TableImpl<AnjuTagsRecord> {

    private static final long serialVersionUID = -1928587754;

    /**
     * The reference instance of <code>anzoo_anzoom.anju_tags</code>
     */
    public static final AnjuTags ANJU_TAGS = new AnjuTags();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnjuTagsRecord> getRecordType() {
        return AnjuTagsRecord.class;
    }

    /**
     * The column <code>anzoo_anzoom.anju_tags.id</code>.
     */
    public final TableField<AnjuTagsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>anzoo_anzoom.anju_tags.tag</code>.
     */
    public final TableField<AnjuTagsRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>anzoo_anzoom.anju_tags.tag_count</code>.
     */
    public final TableField<AnjuTagsRecord, Integer> TAG_COUNT = createField("tag_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>anzoo_anzoom.anju_tags</code> table reference
     */
    public AnjuTags() {
        this(DSL.name("anju_tags"), null);
    }

    /**
     * Create an aliased <code>anzoo_anzoom.anju_tags</code> table reference
     */
    public AnjuTags(String alias) {
        this(DSL.name(alias), ANJU_TAGS);
    }

    /**
     * Create an aliased <code>anzoo_anzoom.anju_tags</code> table reference
     */
    public AnjuTags(Name alias) {
        this(alias, ANJU_TAGS);
    }

    private AnjuTags(Name alias, Table<AnjuTagsRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnjuTags(Name alias, Table<AnjuTagsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AnzooAnzoom.ANZOO_ANZOOM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANJU_TAGS_ANJU_TAGS_TAG_UINDEX, Indexes.ANJU_TAGS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AnjuTagsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ANJU_TAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AnjuTagsRecord> getPrimaryKey() {
        return Keys.KEY_ANJU_TAGS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AnjuTagsRecord>> getKeys() {
        return Arrays.<UniqueKey<AnjuTagsRecord>>asList(Keys.KEY_ANJU_TAGS_PRIMARY, Keys.KEY_ANJU_TAGS_ANJU_TAGS_TAG_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnjuTags as(String alias) {
        return new AnjuTags(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnjuTags as(Name alias) {
        return new AnjuTags(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnjuTags rename(String name) {
        return new AnjuTags(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnjuTags rename(Name name) {
        return new AnjuTags(name, null);
    }
}
