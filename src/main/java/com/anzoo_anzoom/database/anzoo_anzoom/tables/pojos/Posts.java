/*
 * This file is generated by jOOQ.
*/
package com.anzoo_anzoom.database.anzoo_anzoom.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Posts implements Serializable {

    private static final long serialVersionUID = -2138297380;

    private Integer   id;
    private Integer   userId;
    private String    photoUrl;
    private String    content;
    private Integer   beerScore;
    private Integer   sojuScore;
    private Integer   traditionalAlcoholicDrinksScore;
    private Timestamp createdAt;
    private Timestamp updatedAt;
    private Timestamp deletedAt;

    public Posts() {}

    public Posts(Posts value) {
        this.id = value.id;
        this.userId = value.userId;
        this.photoUrl = value.photoUrl;
        this.content = value.content;
        this.beerScore = value.beerScore;
        this.sojuScore = value.sojuScore;
        this.traditionalAlcoholicDrinksScore = value.traditionalAlcoholicDrinksScore;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.deletedAt = value.deletedAt;
    }

    public Posts(
        Integer   id,
        Integer   userId,
        String    photoUrl,
        String    content,
        Integer   beerScore,
        Integer   sojuScore,
        Integer   traditionalAlcoholicDrinksScore,
        Timestamp createdAt,
        Timestamp updatedAt,
        Timestamp deletedAt
    ) {
        this.id = id;
        this.userId = userId;
        this.photoUrl = photoUrl;
        this.content = content;
        this.beerScore = beerScore;
        this.sojuScore = sojuScore;
        this.traditionalAlcoholicDrinksScore = traditionalAlcoholicDrinksScore;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public String getPhotoUrl() {
        return this.photoUrl;
    }

    public void setPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
    }

    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public Integer getBeerScore() {
        return this.beerScore;
    }

    public void setBeerScore(Integer beerScore) {
        this.beerScore = beerScore;
    }

    public Integer getSojuScore() {
        return this.sojuScore;
    }

    public void setSojuScore(Integer sojuScore) {
        this.sojuScore = sojuScore;
    }

    public Integer getTraditionalAlcoholicDrinksScore() {
        return this.traditionalAlcoholicDrinksScore;
    }

    public void setTraditionalAlcoholicDrinksScore(Integer traditionalAlcoholicDrinksScore) {
        this.traditionalAlcoholicDrinksScore = traditionalAlcoholicDrinksScore;
    }

    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    public Timestamp getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Timestamp getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Timestamp deletedAt) {
        this.deletedAt = deletedAt;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Posts (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(photoUrl);
        sb.append(", ").append(content);
        sb.append(", ").append(beerScore);
        sb.append(", ").append(sojuScore);
        sb.append(", ").append(traditionalAlcoholicDrinksScore);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(deletedAt);

        sb.append(")");
        return sb.toString();
    }
}
